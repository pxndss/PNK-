{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// Necesitarás react-router-dom para las redirecciones\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const navigate=useNavigate();// Hook para la navegación\nconst handleSubmit=async e=>{e.preventDefault();// Prevenir el comportamiento por defecto del formulario (recargar la página)\nsetError('');// Limpiar errores previos\ntry{// URL de tu API de login en el servidor EC2\n// Asegúrate de que esta URL sea correcta (ej. http://tu_ip_ec2/api/login_api.php)\nconst response=await fetch('http://18.218.217.229/api/login.php',{// CAMBIAR si el PHP se llama diferente o está en otra ruta\nmethod:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'// O 'application/json' si decides enviar JSON desde React\n},// Si envías como application/x-www-form-urlencoded:\nbody:new URLSearchParams({usuario:email,clave:password}).toString()// Si decides enviar como application/json, el 'body' sería:\n// body: JSON.stringify({\n//     usuario: email,\n//     clave: password,\n// }),\n});// Verificar si la respuesta fue OK (status 2xx)\nif(!response.ok){// Si el servidor devuelve un 400, 401, etc., lo manejamos aquí\nconst errorData=await response.json();// Intentar leer el JSON del error\nsetError(errorData.message||'Error al iniciar sesión. Inténtalo de nuevo.');return;}const data=await response.json();// Leer la respuesta JSON del servidor\nif(data.success){// Inicio de sesión exitoso\n// Aquí podrías guardar el token de sesión o los datos del usuario en localStorage/sessionStorage\n// Por ejemplo: localStorage.setItem('token', data.token);\nconsole.log('Inicio de sesión exitoso:',data.user);// Redirigir al usuario según su tipo (esto lo hace el frontend)\nswitch(data.user.tipo_usuario){case'admin':navigate('/admin/dashboard');// Ruta de tu frontend React para el dashboard de admin\nbreak;case'gestor':navigate('/gestor/dashboard');// Ruta de tu frontend React para el dashboard de gestor\nbreak;case'propietario':navigate('/propietario/dashboard');// Ruta de tu frontend React para el dashboard de propietario\nbreak;default:navigate('/dashboard');// Ruta por defecto\n}}else{// Mensaje de error de credenciales incorrectas desde el servidor\nsetError(data.message||'Credenciales incorrectas. Verifique su correo y contraseña.');}}catch(err){// Error de red o cualquier otro error inesperado\nconsole.error('Error de red o del servidor:',err);setError('No se pudo conectar con el servidor. Inténtalo de nuevo más tarde.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/img/logo.png\",alt:\"PNK Inmobiliaria Logo\",height:\"80\"})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Iniciar Sesi\\xF3n\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"usuario\",children:\"Correo Electr\\xF3nico:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"usuario\",name:\"usuario\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"clave\",children:\"Contrase\\xF1a:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"clave\",name:\"clave\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Entrar\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"register-link\",children:[\"\\xBFNo tienes cuenta? \",/*#__PURE__*/_jsx(\"a\",{href:\"/registro\",children:\"Reg\\xEDstrate aqu\\xED\"}),\" \"]})]});};export default LoginPage;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","LoginPage","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","URLSearchParams","usuario","clave","toString","ok","errorData","json","message","data","success","console","log","user","tipo_usuario","err","className","children","src","alt","height","onSubmit","htmlFor","type","id","name","value","onChange","target","required","href"],"sources":["C:/xampp/php/www/pnk-react/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Necesitarás react-router-dom para las redirecciones\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Hook para la navegación\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevenir el comportamiento por defecto del formulario (recargar la página)\r\n        setError(''); // Limpiar errores previos\r\n\r\n        try {\r\n            // URL de tu API de login en el servidor EC2\r\n            // Asegúrate de que esta URL sea correcta (ej. http://tu_ip_ec2/api/login_api.php)\r\n            const response = await fetch('http://18.218.217.229/api/login.php', { // CAMBIAR si el PHP se llama diferente o está en otra ruta\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded', // O 'application/json' si decides enviar JSON desde React\r\n                },\r\n                // Si envías como application/x-www-form-urlencoded:\r\n                body: new URLSearchParams({\r\n                    usuario: email,\r\n                    clave: password,\r\n                }).toString(),\r\n                // Si decides enviar como application/json, el 'body' sería:\r\n                // body: JSON.stringify({\r\n                //     usuario: email,\r\n                //     clave: password,\r\n                // }),\r\n            });\r\n\r\n            // Verificar si la respuesta fue OK (status 2xx)\r\n            if (!response.ok) {\r\n                // Si el servidor devuelve un 400, 401, etc., lo manejamos aquí\r\n                const errorData = await response.json(); // Intentar leer el JSON del error\r\n                setError(errorData.message || 'Error al iniciar sesión. Inténtalo de nuevo.');\r\n                return;\r\n            }\r\n\r\n            const data = await response.json(); // Leer la respuesta JSON del servidor\r\n\r\n            if (data.success) {\r\n                // Inicio de sesión exitoso\r\n                // Aquí podrías guardar el token de sesión o los datos del usuario en localStorage/sessionStorage\r\n                // Por ejemplo: localStorage.setItem('token', data.token);\r\n                console.log('Inicio de sesión exitoso:', data.user);\r\n\r\n                // Redirigir al usuario según su tipo (esto lo hace el frontend)\r\n                switch (data.user.tipo_usuario) {\r\n                    case 'admin':\r\n                        navigate('/admin/dashboard'); // Ruta de tu frontend React para el dashboard de admin\r\n                        break;\r\n                    case 'gestor':\r\n                        navigate('/gestor/dashboard'); // Ruta de tu frontend React para el dashboard de gestor\r\n                        break;\r\n                    case 'propietario':\r\n                        navigate('/propietario/dashboard'); // Ruta de tu frontend React para el dashboard de propietario\r\n                        break;\r\n                    default:\r\n                        navigate('/dashboard'); // Ruta por defecto\r\n                }\r\n            } else {\r\n                // Mensaje de error de credenciales incorrectas desde el servidor\r\n                setError(data.message || 'Credenciales incorrectas. Verifique su correo y contraseña.');\r\n            }\r\n        } catch (err) {\r\n            // Error de red o cualquier otro error inesperado\r\n            console.error('Error de red o del servidor:', err);\r\n            setError('No se pudo conectar con el servidor. Inténtalo de nuevo más tarde.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"logo\">\r\n                <img src=\"/img/logo.png\" alt=\"PNK Inmobiliaria Logo\" height=\"80\" />\r\n            </div>\r\n            <h2>Iniciar Sesión</h2>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"usuario\">Correo Electrónico:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"usuario\"\r\n                        name=\"usuario\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"clave\">Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"clave\"\r\n                        name=\"clave\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Entrar</button>\r\n            </form>\r\n            <div className=\"register-link\">\r\n                ¿No tienes cuenta? <a href=\"/registro\">Regístrate aquí</a> {/* Asegúrate de que esta ruta sea de React Router */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}