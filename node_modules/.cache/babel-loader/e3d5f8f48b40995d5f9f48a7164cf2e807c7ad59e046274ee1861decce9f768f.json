{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\php\\\\www\\\\pnk-react\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Necesitarás react-router-dom para las redirecciones\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Hook para la navegación\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevenir el comportamiento por defecto del formulario (recargar la página)\n    setError(''); // Limpiar errores previos\n\n    try {\n      // URL de tu API de login en el servidor EC2\n      // Asegúrate de que esta URL sea correcta (ej. http://tu_ip_ec2/api/login_api.php)\n      const response = await fetch('http://18.218.217.229/api/login.php', {\n        // CAMBIAR si el PHP se llama diferente o está en otra ruta\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded' // O 'application/json' si decides enviar JSON desde React\n        },\n        // Si envías como application/x-www-form-urlencoded:\n        body: new URLSearchParams({\n          usuario: email,\n          clave: password\n        }).toString()\n        // Si decides enviar como application/json, el 'body' sería:\n        // body: JSON.stringify({\n        //     usuario: email,\n        //     clave: password,\n        // }),\n      });\n\n      // Verificar si la respuesta fue OK (status 2xx)\n      if (!response.ok) {\n        // Si el servidor devuelve un 400, 401, etc., lo manejamos aquí\n        const errorData = await response.json(); // Intentar leer el JSON del error\n        setError(errorData.message || 'Error al iniciar sesión. Inténtalo de nuevo.');\n        return;\n      }\n      const data = await response.json(); // Leer la respuesta JSON del servidor\n\n      if (data.success) {\n        // Inicio de sesión exitoso\n        // Aquí podrías guardar el token de sesión o los datos del usuario en localStorage/sessionStorage\n        // Por ejemplo: localStorage.setItem('token', data.token);\n        console.log('Inicio de sesión exitoso:', data.user);\n\n        // Redirigir al usuario según su tipo (esto lo hace el frontend)\n        switch (data.user.tipo_usuario) {\n          case 'admin':\n            navigate('/admin/dashboard'); // Ruta de tu frontend React para el dashboard de admin\n            break;\n          case 'gestor':\n            navigate('/gestor/dashboard'); // Ruta de tu frontend React para el dashboard de gestor\n            break;\n          case 'propietario':\n            navigate('/propietario/dashboard'); // Ruta de tu frontend React para el dashboard de propietario\n            break;\n          default:\n            navigate('/dashboard');\n          // Ruta por defecto\n        }\n      } else {\n        // Mensaje de error de credenciales incorrectas desde el servidor\n        setError(data.message || 'Credenciales incorrectas. Verifique su correo y contraseña.');\n      }\n    } catch (err) {\n      // Error de red o cualquier otro error inesperado\n      console.error('Error de red o del servidor:', err);\n      setError('No se pudo conectar con el servidor. Inténtalo de nuevo más tarde.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/logo.png\",\n        alt: \"PNK Inmobiliaria Logo\",\n        height: \"80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"usuario\",\n          children: \"Correo Electr\\xF3nico:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"usuario\",\n          name: \"usuario\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"clave\",\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"clave\",\n          name: \"clave\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: [\"\\xBFNo tienes cuenta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/registro\",\n        children: \"Reg\\xEDstrate aqu\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 36\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","URLSearchParams","usuario","clave","toString","ok","errorData","json","message","data","success","console","log","user","tipo_usuario","err","className","children","src","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/xampp/php/www/pnk-react/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Necesitarás react-router-dom para las redirecciones\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Hook para la navegación\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevenir el comportamiento por defecto del formulario (recargar la página)\r\n        setError(''); // Limpiar errores previos\r\n\r\n        try {\r\n            // URL de tu API de login en el servidor EC2\r\n            // Asegúrate de que esta URL sea correcta (ej. http://tu_ip_ec2/api/login_api.php)\r\n            const response = await fetch('http://18.218.217.229/api/login.php', { // CAMBIAR si el PHP se llama diferente o está en otra ruta\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded', // O 'application/json' si decides enviar JSON desde React\r\n                },\r\n                // Si envías como application/x-www-form-urlencoded:\r\n                body: new URLSearchParams({\r\n                    usuario: email,\r\n                    clave: password,\r\n                }).toString(),\r\n                // Si decides enviar como application/json, el 'body' sería:\r\n                // body: JSON.stringify({\r\n                //     usuario: email,\r\n                //     clave: password,\r\n                // }),\r\n            });\r\n\r\n            // Verificar si la respuesta fue OK (status 2xx)\r\n            if (!response.ok) {\r\n                // Si el servidor devuelve un 400, 401, etc., lo manejamos aquí\r\n                const errorData = await response.json(); // Intentar leer el JSON del error\r\n                setError(errorData.message || 'Error al iniciar sesión. Inténtalo de nuevo.');\r\n                return;\r\n            }\r\n\r\n            const data = await response.json(); // Leer la respuesta JSON del servidor\r\n\r\n            if (data.success) {\r\n                // Inicio de sesión exitoso\r\n                // Aquí podrías guardar el token de sesión o los datos del usuario en localStorage/sessionStorage\r\n                // Por ejemplo: localStorage.setItem('token', data.token);\r\n                console.log('Inicio de sesión exitoso:', data.user);\r\n\r\n                // Redirigir al usuario según su tipo (esto lo hace el frontend)\r\n                switch (data.user.tipo_usuario) {\r\n                    case 'admin':\r\n                        navigate('/admin/dashboard'); // Ruta de tu frontend React para el dashboard de admin\r\n                        break;\r\n                    case 'gestor':\r\n                        navigate('/gestor/dashboard'); // Ruta de tu frontend React para el dashboard de gestor\r\n                        break;\r\n                    case 'propietario':\r\n                        navigate('/propietario/dashboard'); // Ruta de tu frontend React para el dashboard de propietario\r\n                        break;\r\n                    default:\r\n                        navigate('/dashboard'); // Ruta por defecto\r\n                }\r\n            } else {\r\n                // Mensaje de error de credenciales incorrectas desde el servidor\r\n                setError(data.message || 'Credenciales incorrectas. Verifique su correo y contraseña.');\r\n            }\r\n        } catch (err) {\r\n            // Error de red o cualquier otro error inesperado\r\n            console.error('Error de red o del servidor:', err);\r\n            setError('No se pudo conectar con el servidor. Inténtalo de nuevo más tarde.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"logo\">\r\n                <img src=\"/img/logo.png\" alt=\"PNK Inmobiliaria Logo\" height=\"80\" />\r\n            </div>\r\n            <h2>Iniciar Sesión</h2>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"usuario\">Correo Electrónico:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"usuario\"\r\n                        name=\"usuario\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"clave\">Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"clave\"\r\n                        name=\"clave\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Entrar</button>\r\n            </form>\r\n            <div className=\"register-link\">\r\n                ¿No tienes cuenta? <a href=\"/registro\">Regístrate aquí</a> {/* Asegúrate de que esta ruta sea de React Router */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}