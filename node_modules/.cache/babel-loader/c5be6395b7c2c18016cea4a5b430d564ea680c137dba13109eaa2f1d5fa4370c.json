{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,useNavigate}from'react-router-dom';// Mantén useNavigate aquí\nimport'bootstrap/dist/css/bootstrap.min.css';import'./App.css';// Importar componentes de UI\nimport NavbarComponent from'./components/NavbarComponent';import HeroSection from'./components/HeroSection';import FeaturedProperties from'./components/FeaturedProperties';import ServicesSection from'./components/ServicesSection';import FooterComponent from'./components/FooterComponent';// Importar el componente de login que interactúa con la API\nimport LoginPage from'./pages/LoginPage';// Importar el componente de recuperación de contraseña\nimport Recovery from'./components/Recovery';// Importaciones para los componentes de Dashboard (confirmado en src/pages/)\nimport AdminDashboard from'./pages/AdminDashboard';import Dashboard from'./pages/Dashboard';import GestorDashboard from'./pages/GestorDashboard';import PropietarioDashboard from'./pages/PropietarioDashboard';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[session,setSession]=useState({isLoggedIn:false,userName:'',userType:''});// useNavigate debe estar DENTRO de un componente renderizado por Router.\n// En este caso, App es ese componente.\nconst navigate=useNavigate();// <-- AHORA SÍ ES CORRECTO AQUÍ\nuseEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){try{const user=JSON.parse(storedUser);setSession({isLoggedIn:true,userName:user.nombre,userType:user.tipo_usuario});// Opcional: Redirigir al dashboard si ya está logueado al cargar la app\n// if (user.tipo_usuario === 'admin') navigate('/admin/dashboard');\n// else if (user.tipo_usuario === 'gestor') navigate('/gestor/dashboard');\n// else if (user.tipo_usuario === 'propietario') navigate('/propietario/dashboard');\n// else navigate('/dashboard');\n}catch(e){console.error(\"Error parsing stored user data:\",e);localStorage.removeItem('user');}}},[navigate]);// Añade 'navigate' a las dependencias para evitar advertencias\nconst handleLoginSuccess=userData=>{setSession({isLoggedIn:true,userName:userData.nombre,userType:userData.tipo_usuario});localStorage.setItem('user',JSON.stringify(userData));// Esta lógica de redirección se queda en App.js porque es la que tiene el navigate correcto\nswitch(userData.tipo_usuario){case'admin':navigate('/admin/dashboard');break;case'gestor':navigate('/gestor/dashboard');break;case'propietario':navigate('/propietario/dashboard');break;default:navigate('/dashboard');}};const handleLogout=()=>{setSession({isLoggedIn:false,userName:'',userType:''});localStorage.removeItem('user');navigate('/login');};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(NavbarComponent,{session:session,onLogout:handleLogout}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(HeroSection,{}),/*#__PURE__*/_jsx(FeaturedProperties,{}),/*#__PURE__*/_jsx(ServicesSection,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{onLoginSuccess:handleLoginSuccess})}),/*#__PURE__*/_jsx(Route,{path:\"/recuperar\",element:/*#__PURE__*/_jsx(Recovery,{})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/dashboard\",element:/*#__PURE__*/_jsx(AdminDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/gestor/dashboard\",element:/*#__PURE__*/_jsx(GestorDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/propietario/dashboard\",element:/*#__PURE__*/_jsx(PropietarioDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(Dashboard,{})})]}),/*#__PURE__*/_jsx(FooterComponent,{session:session})]});}// Para usar useNavigate fuera de App, la aplicación debe estar envuelta en <BrowserRouter>\n// Por lo tanto, envolvemos App en BrowserRouter en el index.js\n// Si ya lo tienes así, ignora esto.\n// Si no, tu index.js (o el punto de entrada principal) debe verse así:\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n*/export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","NavbarComponent","HeroSection","FeaturedProperties","ServicesSection","FooterComponent","LoginPage","Recovery","AdminDashboard","Dashboard","GestorDashboard","PropietarioDashboard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","session","setSession","isLoggedIn","userName","userType","navigate","storedUser","localStorage","getItem","user","JSON","parse","nombre","tipo_usuario","e","console","error","removeItem","handleLoginSuccess","userData","setItem","stringify","handleLogout","className","children","onLogout","path","element","onLoginSuccess"],"sources":["C:/xampp/php/www/pnk-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom'; // Mantén useNavigate aquí\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Importar componentes de UI\nimport NavbarComponent from './components/NavbarComponent';\nimport HeroSection from './components/HeroSection';\nimport FeaturedProperties from './components/FeaturedProperties';\nimport ServicesSection from './components/ServicesSection';\nimport FooterComponent from './components/FooterComponent';\n\n// Importar el componente de login que interactúa con la API\nimport LoginPage from './pages/LoginPage';\n\n// Importar el componente de recuperación de contraseña\nimport Recovery from './components/Recovery';\n\n// Importaciones para los componentes de Dashboard (confirmado en src/pages/)\nimport AdminDashboard from './pages/AdminDashboard';\nimport Dashboard from './pages/Dashboard';\nimport GestorDashboard from './pages/GestorDashboard';\nimport PropietarioDashboard from './pages/PropietarioDashboard';\n\nfunction App() {\n  const [session, setSession] = useState({\n    isLoggedIn: false,\n    userName: '',\n    userType: ''\n  });\n\n  // useNavigate debe estar DENTRO de un componente renderizado por Router.\n  // En este caso, App es ese componente.\n  const navigate = useNavigate(); // <-- AHORA SÍ ES CORRECTO AQUÍ\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const user = JSON.parse(storedUser);\n        setSession({\n          isLoggedIn: true,\n          userName: user.nombre,\n          userType: user.tipo_usuario\n        });\n        // Opcional: Redirigir al dashboard si ya está logueado al cargar la app\n        // if (user.tipo_usuario === 'admin') navigate('/admin/dashboard');\n        // else if (user.tipo_usuario === 'gestor') navigate('/gestor/dashboard');\n        // else if (user.tipo_usuario === 'propietario') navigate('/propietario/dashboard');\n        // else navigate('/dashboard');\n      } catch (e) {\n        console.error(\"Error parsing stored user data:\", e);\n        localStorage.removeItem('user');\n      }\n    }\n  }, [navigate]); // Añade 'navigate' a las dependencias para evitar advertencias\n\n  const handleLoginSuccess = (userData) => {\n    setSession({\n      isLoggedIn: true,\n      userName: userData.nombre,\n      userType: userData.tipo_usuario\n    });\n    localStorage.setItem('user', JSON.stringify(userData));\n\n    // Esta lógica de redirección se queda en App.js porque es la que tiene el navigate correcto\n    switch (userData.tipo_usuario) {\n        case 'admin':\n            navigate('/admin/dashboard');\n            break;\n        case 'gestor':\n            navigate('/gestor/dashboard');\n            break;\n        case 'propietario':\n            navigate('/propietario/dashboard');\n            break;\n        default:\n            navigate('/dashboard');\n    }\n  };\n\n  const handleLogout = () => {\n    setSession({ isLoggedIn: false, userName: '', userType: '' });\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"App\">\n      <NavbarComponent session={session} onLogout={handleLogout} />\n      <Routes>\n        <Route path=\"/\" element={\n          <>\n            <HeroSection />\n            <FeaturedProperties />\n            <ServicesSection />\n          </>\n        } />\n        {/* Pasa la función handleLoginSuccess como una prop */}\n        <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n        <Route path=\"/recuperar\" element={<Recovery />} />\n\n        {/* Rutas de Dashboards */}\n        <Route path=\"/admin/dashboard\" element={<AdminDashboard />} />\n        <Route path=\"/gestor/dashboard\" element={<GestorDashboard />} />\n        <Route path=\"/propietario/dashboard\" element={<PropietarioDashboard />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n\n        {/* Añade más rutas aquí según tus necesidades (ej. registro) */}\n        {/* Asegúrate de añadir la ruta /registro si el enlace en LoginPage la usa */}\n        {/* <Route path=\"/registro\" element={<RegisterPage />} /> */}\n      </Routes>\n      <FooterComponent session={session} />\n    </div>\n  );\n}\n\n// Para usar useNavigate fuera de App, la aplicación debe estar envuelta en <BrowserRouter>\n// Por lo tanto, envolvemos App en BrowserRouter en el index.js\n// Si ya lo tienes así, ignora esto.\n// Si no, tu index.js (o el punto de entrada principal) debe verse así:\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n*/\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,WAAW,KAAQ,kBAAkB,CAAE;AACxF,MAAO,sCAAsC,CAC7C,MAAO,WAAW,CAElB;AACA,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,kBAAkB,KAAM,iCAAiC,CAChE,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAE1D;AACA,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAEzC;AACA,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAE5C;AACA,MAAO,CAAAC,cAAc,KAAM,wBAAwB,CACnD,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CACzC,MAAO,CAAAC,eAAe,KAAM,yBAAyB,CACrD,MAAO,CAAAC,oBAAoB,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG1B,QAAQ,CAAC,CACrC2B,UAAU,CAAE,KAAK,CACjBC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEF;AACA;AACA,KAAM,CAAAC,QAAQ,CAAGxB,WAAW,CAAC,CAAC,CAAE;AAEhCL,SAAS,CAAC,IAAM,CACd,KAAM,CAAA8B,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACd,GAAI,CACF,KAAM,CAAAG,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CACnCL,UAAU,CAAC,CACTC,UAAU,CAAE,IAAI,CAChBC,QAAQ,CAAEM,IAAI,CAACG,MAAM,CACrBR,QAAQ,CAAEK,IAAI,CAACI,YACjB,CAAC,CAAC,CACF;AACA;AACA;AACA;AACA;AACF,CAAE,MAAOC,CAAC,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAEF,CAAC,CAAC,CACnDP,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CACjC,CACF,CACF,CAAC,CAAE,CAACZ,QAAQ,CAAC,CAAC,CAAE;AAEhB,KAAM,CAAAa,kBAAkB,CAAIC,QAAQ,EAAK,CACvClB,UAAU,CAAC,CACTC,UAAU,CAAE,IAAI,CAChBC,QAAQ,CAAEgB,QAAQ,CAACP,MAAM,CACzBR,QAAQ,CAAEe,QAAQ,CAACN,YACrB,CAAC,CAAC,CACFN,YAAY,CAACa,OAAO,CAAC,MAAM,CAAEV,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC,CAEtD;AACA,OAAQA,QAAQ,CAACN,YAAY,EACzB,IAAK,OAAO,CACRR,QAAQ,CAAC,kBAAkB,CAAC,CAC5B,MACJ,IAAK,QAAQ,CACTA,QAAQ,CAAC,mBAAmB,CAAC,CAC7B,MACJ,IAAK,aAAa,CACdA,QAAQ,CAAC,wBAAwB,CAAC,CAClC,MACJ,QACIA,QAAQ,CAAC,YAAY,CAAC,CAC9B,CACF,CAAC,CAED,KAAM,CAAAiB,YAAY,CAAGA,CAAA,GAAM,CACzBrB,UAAU,CAAC,CAAEC,UAAU,CAAE,KAAK,CAAEC,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC7DG,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/BZ,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAED,mBACEP,KAAA,QAAKyB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClB9B,IAAA,CAACZ,eAAe,EAACkB,OAAO,CAAEA,OAAQ,CAACyB,QAAQ,CAAEH,YAAa,CAAE,CAAC,cAC7DxB,KAAA,CAACnB,MAAM,EAAA6C,QAAA,eACL9B,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,GAAG,CAACC,OAAO,cACrB7B,KAAA,CAAAF,SAAA,EAAA4B,QAAA,eACE9B,IAAA,CAACX,WAAW,GAAE,CAAC,cACfW,IAAA,CAACV,kBAAkB,GAAE,CAAC,cACtBU,IAAA,CAACT,eAAe,GAAE,CAAC,EACnB,CACH,CAAE,CAAC,cAEJS,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEjC,IAAA,CAACP,SAAS,EAACyC,cAAc,CAAEV,kBAAmB,CAAE,CAAE,CAAE,CAAC,cACnFxB,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,YAAY,CAACC,OAAO,cAAEjC,IAAA,CAACN,QAAQ,GAAE,CAAE,CAAE,CAAC,cAGlDM,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,kBAAkB,CAACC,OAAO,cAAEjC,IAAA,CAACL,cAAc,GAAE,CAAE,CAAE,CAAC,cAC9DK,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,mBAAmB,CAACC,OAAO,cAAEjC,IAAA,CAACH,eAAe,GAAE,CAAE,CAAE,CAAC,cAChEG,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,wBAAwB,CAACC,OAAO,cAAEjC,IAAA,CAACF,oBAAoB,GAAE,CAAE,CAAE,CAAC,cAC1EE,IAAA,CAACd,KAAK,EAAC8C,IAAI,CAAC,YAAY,CAACC,OAAO,cAAEjC,IAAA,CAACJ,SAAS,GAAE,CAAE,CAAE,CAAC,EAK7C,CAAC,cACTI,IAAA,CAACR,eAAe,EAACc,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAClC,CAAC,CAEV,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}